использовать Рисователь
использовать Клавиатура

цел _ | удаление значения

|| Константы
вещ pi = 3.1415926535

|| Настройки
цел ширина = 1280
цел высота = 720
цел числоЛучей = 80

лог дебагИнформация = да

цвет обводка | задавать в точке входа
цвет заливка | задавать в точке входа
цел толщинаОбводки = 0

вещ скоростьПеремещения = 2
вещ скоростьПоворота = 2
вещ длинаЛуча = 15
вещ уголОбзораГрадусы = 90

| ОБЯЗАТЕЛЬНО КРАТНО 2, РАЗМЕРЫ МАССИВОВ
цел числоТочек = 100
цел числоПоверхностей = 50

|| Runtime переменные
цел точекСоздано = 0
цел поверхностейСоздано = 0 

вещ таб точкиX[0:числоТочек]
вещ таб точкиY[0:числоТочек]
цел таб поверхности[0:числоПоверхностей * 2]

вещ таб высотыСегментов[0:числоЛучей] 

вещ уголОбзора = 0
вещ камераX = 0
вещ камераY = 0
вещ поворот = 0

алг
нач
обводка := RGBA(100, 100, 100, 255)
заливка := RGBA(200, 150, 150, 255)
уголОбзора := уголОбзораГрадусы * pi / 180
обнулениеМассивов

камераX := 3
камераY := 3

квадрат(0, 0, 5, 5)

новый лист (ширина, высота, белый)
шрифт("Arial", 10, нет, нет)
кисть(заливка)
|прямоугольник(0,0,100,100)
|закрашенныйПрямоугольник(10, 10, 90, 90, 2, RGBA(100,100,100,255), RGBA(100,100,100,100))
цел времяСтарта, текущееВремя, времяЦикла, времяОтрисовки
времяЦикла := 0
времяОтрисовки := 0
лит дебаг
нц
времяСтарта := время
игровойЦикл(времяЦикла + времяОтрисовки)
текущееВремя := время
времяЦикла := текущееВремя - времяСтарта
времяСтарта := время
обновлениеЭкрана
текущееВремя := время
времяОтрисовки := текущееВремя - времяСтарта
если дебагИнформация
то
перо(1, черный)
надпись(5, 15, цел_в_лит(времяЦикла))
надпись(5, 30, цел_в_лит(времяОтрисовки))
дебаг := "X: " + вещ_в_лит(камераX) + " Y: " + вещ_в_лит(камераY) + " Angle: " + вещ_в_лит(поворот) + " FPS: " + вещ_в_лит((1/((времяЦикла + времяОтрисовки) / 1000)))
надпись(5, 45, дебаг)
все 
кц
кон

алг игровойЦикл(цел времяКадра)
нач
очисткаВысотСегментов
обновитьВидКамеры
обработкаКлавиатуры(времяКадра)
|если поворот > pi * 2 | не работает корректно
| то
|  поворот := поворот - ((поворот / (pi * 2)) * (pi * 2))
|все
|если поворот < 0 
| то
|  поворот := поворот + ((-поворот / (pi * 2)) * (pi * 2))
|все
кон

алг обработкаКлавиатуры(цел времяКадра)
нач
вещ dx, dy, diffX
вещ dSin, dCos
сканкод клавКод
dy := 0
dx := 0
diffX := 0
dSin := sin(поворот)
dCos := cos(поворот)
клавКод := 0
если сигнал клав 
то
клавКод := код клав
если клавКод = КЛ_Ц или клавКод = КЛ_ВВЕРХ
то
dx := dx + dCos
dy := dy + dSin
все
если клавКод = КЛ_Ы или клавКод = КЛ_ВНИЗ
то
dx := dx - dCos
dy := dy - dSin
все
если клавКод = КЛ_Ф или клавКод = КЛ_ВЛЕВО
то
diffX := diffX - скоростьПоворота
все
если клавКод = КЛ_В или клавКод = КЛ_ВПРАВО 
то
diffX := diffX + скоростьПоворота
все
все
сместитьКамеру(dx * скоростьПеремещения * (времяКадра / 1000), dy * скоростьПеремещения * (времяКадра / 1000))
поворот := поворот + diffX * (времяКадра / 1000)
кон

алг обновлениеЭкрана
нач
цел i
вещ ширинаПолоски, серединаЭкрана
ширинаПолоски := ширина / числоЛучей
серединаЭкрана := высота / 2
новый лист(ширина, высота, белый)
перо(толщинаОбводки, обводка)
кисть(заливка)
нц для i от 0 до числоЛучей
|закрашенныйПрямоугольник3(i * ширинаПолоски, серединаЭкрана - высотыСегментов[i], i * ширинаПолоски + ширинаПолоски, серединаЭкрана + высотыСегментов[i])
закрашенныйПрямоугольникБН(i * ширинаПолоски, серединаЭкрана - высотыСегментов[i], i * ширинаПолоски + ширинаПолоски, серединаЭкрана + высотыСегментов[i])
кц
кон

алг обновитьВидКамеры
нач
цел i
вещ угол
цел индексПоверхности
вещ x, y
нц для i от 0 до числоЛучей
угол := (поворот - (уголОбзора / 2)) + (уголОбзора * (i / (числоЛучей - 1)))
если выпуститьЛуч(камераX, камераY, (камераX + длинаЛуча * cos(угол)), (камераY + длинаЛуча * sin(угол)), индексПоверхности, x, y)
то
высотыСегментов[i] := (1/длинаВектора(x - камераX, y - камераY)) * высота / 2
иначе
все
кц
кон

алг лог выпуститьЛуч(вещ x1, y1, x2, y2, рез цел индексПоверхности, рез вещ x, y)
нач
цел i
вещ минX, минY
цел минИндекс
вещ времX, времY
минX := 999999
минY := 999999
времX := 0
времY := 0
минИндекс := 0
знач := нет
нц для i от 0 до поверхностейСоздано
если пересечениеЛучаИПоверхности(x1, y1, x2, y2, i, времX, времY) 
то
знач := да
если времX < минX или времY < минY 
то
минX := времX
минY := времY
минИндекс := i
все
все
кц
x := минX
y := минY
индексПоверхности := минИндекс
кон

алг сместитьКамеру(вещ x, y) | TODO: реализовать колизию
нач
камераX := камераX + x
камераY := камераY + y
кон



|| УТИЛИТЫ

алг закрашенныйПрямоугольникБН(вещ x, y, x2, y2)
нач
прямоугольник(int(x), int(y), int(x2), int(y2))
кон

алг закрашенныйПрямоугольник3(вещ x, y, x2, y2)
нач
закрашенныйПрямоугольник2(int(x), int(y), int(x2), int(y2))
кон

алг закрашенныйПрямоугольник2(цел x, y, x2, y2)
нач
закрашенныйПрямоугольник(x, y, x2, y2, толщинаОбводки, обводка, заливка)
кон

алг закрашенныйПрямоугольник(цел x, y, x2, y2, толщинаОбводки, цвет цветОбводки, цветЗакраски)
нач
кисть(цветЗакраски)
перо(толщинаОбводки, цветОбводки)
прямоугольник(x, y, x2, y2)
кон

алг лог пересечениеЛучаИПоверхности(вещ x1, y1, x2, y2, цел индексПоверхности, рез вещ x, y)
нач
знач := пересечениеЛиний(x1, y1, x2, y2, точкиX[поверхности[индексПоверхности]], точкиY[поверхности[индексПоверхности]],точкиX[поверхности[индексПоверхности + 1]], точкиY[поверхности[индексПоверхности + 1]], x, y) 
кон

алг лог пересечениеЛиний(вещ x11, y11, x12, y12, x21, y21, x22, y22, рез вещ x, y)
нач
вещ кат1x, кат1y, кат2x, кат2y, скал1, скал2
кат1x := x12 - x11
кат1y := y12 - y11
кат2x := x22 - x21
кат2y := y22 - y21
скал1 := скал(кат1x, кат1y, x21 - x11, y21 - y11)
скал2 := скал(кат1x, кат1y, x22 - x11, y22 - y11)

если sign(скал1) = sign(скал2) или скал1 = 0 или скал2 = 0
то 
знач := нет
выход
все

скал1 := скал(кат2x, кат2y, x11 - x21, y11 - y21)
скал2 := скал(кат2x, кат2y, x12 - x21, y12 - y21)

если sign(скал1) = sign(скал2) или скал1 = 0 или скал2 = 0
то
знач := нет
выход
все

x := x11 + кат1x * abs(скал1) / abs(скал2 - скал1)
y := y11 + кат1y * abs(скал1) / abs(скал2 - скал1)
знач := да
кон

| Поверхности

алг круг(вещ x, y, радиус, цел числоПоверхностей)
нач
цел i
вещ x1
вещ y1
цел предТочка
нц для i от 0 до числоПоверхностей
x1 := радиус * cos(i / числоПоверхностей * 2 * pi + pi / 4)
y1 := радиус * sin(i / числоПоверхностей * 2 * pi + pi / 4) 
если i > 0
то
_ := поверхность(предТочка, точка(x1, y1))
все
предТочка := точка(x1, y1)
кц
кон

алг квадрат(вещ x1, y1, x2, y2)
нач
_ := поверхность(точка(x1, y1), точка(x2, y1))
_ := поверхность(точка(x2, y1), точка(x2, y2))
_ := поверхность(точка(x2, y2), точка(x1, y2))
_ := поверхность(точка(x1, y2), точка(x1, y1))
кон

алг цел поверхность(цел точка1, точка2)
нач
цел индекс 
индекс := поверхностейСоздано * 2
цел индексСозданной
индексСозданной := найтиПоверхность(точка1, точка2)
если поверхностейСоздано <> числоПоверхностей 
то
если индексСозданной = -1
то
поверхности[индекс] := точка1
поверхности[индекс + 1] := точка2
знач := поверхностейСоздано
поверхностейСоздано := поверхностейСоздано + 1
иначе
знач := индексСозданной
все
все
кон

алг цел точка(вещ x, y)
нач
цел индекс
индекс := найтиТочку(x, y)
если точекСоздано <> числоТочек 
то
если индекс = -1 
то
точкиX[точекСоздано] := x
точкиY[точекСоздано] := y
знач := точекСоздано
точекСоздано := точекСоздано + 1
иначе
знач := индекс
все
все
кон

алг лог точкаСоздана(вещ x, y)
нач
знач := найтиТочку(x, y) <> -1
кон

алг цел найтиТочку(вещ x, y)
нач
цел i
знач := -1
нц для i от 0 до точекСоздано
если точкиX[i] = x и точкиY[i] = y 
то
знач := i
все
кц
кон

алг лог поверхностьСоздана(цел точка1, цел точка2)
нач
знач := найтиПоверхность(точка1, точка2) <> -1
кон

алг цел найтиПоверхность(цел точка1, точка2)
нач
цел i
знач := -1
нц для i от 0 до поверхностейСоздано шаг 2
если поверхности[i] = точка1 и поверхности[i + 1] = точка2 
то
знач := i
все
кц
кон

| Точки

алг вещ скал(вещ x1, y1, x2, y2)
нач
знач := x1 * y2 - x2 * y1
кон

алг вещ длинаВектора(вещ x, y)
нач
знач := sqrt(x * x + y * y)
кон

| Обнуления

алг обнулениеМассивов
нач
цел i 
нц для i от 0 до числоТочек
точкиX[i] := -1
точкиY[i] := -1
кц
нц для i от 0 до числоПоверхностей * 2
поверхности[i] := -1
кц
нц для i от 0 до числоЛучей
высотыСегментов[i] := -1
кц
кон

алг очисткаВысотСегментов
нач
цел i
нц для i от 0 до числоЛучей
высотыСегментов[i] := 0
кц
кон







